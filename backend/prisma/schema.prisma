generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String         @id @default(cuid())
    email         String         @unique
    fullname      String
    username      String         @unique
    password      String
    role          Role
    createdEvents Event[]        @relation("UserCreatedEvents")
    assignments   Assignment[]
    comments      Comment[]
    notifications Notification[]
}

enum Role {
    Owner
    User
}

model Event {
    eventId       String         @id @default(cuid())
    eventName     String
    description   String
    startDate     DateTime
    updatedAt     DateTime       @updatedAt
    creatorId     String
    creator       User           @relation("UserCreatedEvents", fields: [creatorId], references: [id])
    categories    Category[]
    assignments   Assignment[]
    notifications Notification[]
}

model Category {
    id           String      @id @default(cuid())
    name         String
    event        Event       @relation(fields: [eventId], references: [eventId])
    eventId      String
    items        Item[]
    Assignment   Assignment? @relation(fields: [assignmentId], references: [id])
    assignmentId String?
}

model Item {
    id           String      @id @default(cuid())
    name         String
    isPacked     Boolean     @default(false)
    isDelivered  Boolean     @default(false)
    category     Category    @relation(fields: [categoryId], references: [id])
    categoryId   String
    assignment   Assignment? @relation(fields: [assignmentId], references: [id])
    assignmentId String?
    comments     Comment[]
}

model Assignment {
    id         String     @id @default(cuid())
    user       User       @relation(fields: [userId], references: [id])
    userId     String
    event      Event      @relation(fields: [eventId], references: [eventId])
    eventId    String
    level      Permission
    categories Category[] // Member can only access assigned categories
    items      Item[] // Add this line to complete the relation
}

enum Permission {
    Admin
    Member
    Viewer
}

model Comment {
    id        String   @id @default(cuid())
    text      String
    createdAt DateTime @default(now())
    item      Item     @relation(fields: [itemId], references: [id])
    itemId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model Notification {
    id        String   @id @default(cuid())
    message   String
    event     Event    @relation(fields: [eventId], references: [eventId])
    eventId   String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    sent      Boolean  @default(false)
    createdAt DateTime @default(now())
}
